{"path":"media/1702.02914v1.pdf","text":"arXiv:1702.02914v1 [cs.LG] 9 Feb 2017 1 Spatial Filtering for EEG-Based Regression Problems in Brain-Computer Interface (BCI) Dongrui Wu∗, Senior Member, IEEE, Jung-Tai King†, Chun-Hsiang Chuang‡†, Chin-Teng Lin‡†, Fellow, IEEE, Tzyy-Ping Jung§¶, Fellow, IEEE ∗DataNova, NY USA †Brain Research Center, National Chiao-Tung University, Hsinchu, Taiwan ‡Faculty of Engineering and Information Technology, University of Technology, Sydney, Australia §Swartz Center for Computational Neuroscience, Institute for Neural Computation, University of California San Diego, La Jolla, CA ¶Center for Advanced Neurological Engineering, Institute of Engineering in Medicine, University of California San Diego, La Jolla, CA E-mail: drwu09@gmail.com, jtchin2@gmail.com, cch.chuang@gmail.com, Chin-Teng.Lin@uts.edu.au, jung@sccn.ucsd.edu Abstract—Electroencephalogram (EEG) signals are frequently used in brain-computer interfaces (BCIs), but they are easily contaminated by artifacts and noises, so preprocessing must be done before they are fed into a machine learning algorithm for classiﬁcation or regression. Spatial ﬁlters have been widely used to increase the signal-to-noise ratio of EEG for BCI classiﬁcation problems, but their applications in BCI regression problems have been very limited. This paper proposes two common spatial pattern (CSP) ﬁlters for EEG-based regression problems in BCI, which are extended from the CSP ﬁlter for classiﬁcation, by making use of fuzzy sets. Experimental results on EEG-based response speed estimation from a large-scale study, which collected 143 sessions of sustained-attention psychomotor vigilance task data from 17 subjects during a 5-month period, demonstrate that the two proposed spatial ﬁlters can signiﬁcantly increase the EEG signal quality. When used in LASSO and k- nearest neighbors regression for user response speed estimation, the spatial ﬁlters can reduce the root mean square estimation error by 10.02 − 19.77%, and at the same time increase the correlation to the true response speed by 19.39 − 86.47%. Index Terms—Brain-computer interface, common spatial pat- tern, EEG, fuzzy sets, psychomotor vigilance task, response speed estimation, spatial ﬁltering I. INTRODUCTION Electroencephalogram (EEG) signals are the most widely used input for brain-computer interfaces (BCIs) [24], [25], [29], [34], [47], [53], mainly due to the convenience to obtain them, compared with magnetoencephalography (MEG) [32], functional magnetic resonance imaging (fMRI) [44], func- tional near-infrared spectroscopy (fNIRS) [33], and invasive signals like electrocorticography (ECoG) [35] and intracortical neural recordings [30]. However, EEG signals are often con- taminated by ocular, muscular, and cardiac artifacts and vari- ous noises (power-line, changes in electrode impedances, etc) [4], [34], [49]. Usually some preprocessing, either manually or automatically [4], [34], is needed to remove the artifacts, and then temporal and spatial ﬁlters are applied to further improve the EEG signal quality before feeding it into a classiﬁcation or regression algorithm. The most commonly used temporal ﬁlters are band-pass ﬁlters and notch ﬁlters (at 50 or 60 Hz power-line frequency). This paper focuses on spatial ﬁltering for improving the EEG signal quality. Many such approaches have been proposed in the literature [2], [7], [15], [17], [37], [38], [40], [41], [54]. However, almost all of them focus primarily on EEG classiﬁcation problems in BCI, whereas EEG regression prob- lems have been largely overlooked. Nevertheless, the latter is also very important in BCI. One example is driver drowsiness (or alertness) estimation from EEG signals, which has been extensively studied in our previous research [26]–[28], [56], [59], [60], [62]. This is a very important problem because drowsy driving is among the most important causes of road crashes, following only to alcohol, speeding, and inattention [43]. According to the National Highway Trafﬁc Safety Ad- ministration [52], 2.5% of fatal motor vehicle crashes (on average 886/year in the U.S.) and 2.5% of fatalities (on average 1,004/year in the U.S.) between 2005 and 2009 involved drowsy driving. This paper proposes two spatial ﬁlters for EEG-based re- gression problems in BCI. We also validate their performance in response speed (RS) estimation from EEG signals measured in a large-scale sustained-attention psychomotor vigilance task (PVT) [21], which collected 143 sessions of data from 17 subjects in a 5-month period. The remainder of this paper is organized as follows: Sec- tion II reviews the state-of-the-art spatial ﬁlters for EEG- based classiﬁcation problems in BCI. Section III introduces our proposed spatial ﬁlters for supervised BCI regression problems. Section IV describes the experimental setup, RS and EEG data preprocessing techniques, and the procedure to evaluate the performances of different spatial ﬁlters. Section V presents the results of the comparative studies and parameter sensitivity analysis for the proposed spatial ﬁlter. Section VI discusses the limitations of the proposed approaches and outlines several future research directions. Finally, Section VII 2 draws conclusions. II. SPATIAL FILTERS FOR EEG CLASSIFICATION IN BCI Many spatial ﬁlters have been proposed for EEG classiﬁca- tion in BCI. The most basic ones include common average reference (CAR) [48], Laplacian ﬁlters [23], and principal component analysis [19]. Some of the more recent and also more sophisticated ones are: 1) Independent Component Analysis (ICA) [9], [17], [54], which decomposes a multivariate signal into indepen- dent non-Gaussian signals. ICA has been widely used in the EEG research community to detect and remove stereotyped eye, muscle, and line noise artifacts [20], [26], [49]. Generally ICA works on an unepoched long block of EEG data, instead of epoched short EEG trials. Let the unepoched EEG data be X ∈ RC×T , where C is the number of EEG channels, and T is the number of time samples. ICA assumes that X is the linear combination of c independent sources, i.e., X = AS, where A ∈ RC×c is the mixing matrix, and the source signals, which are the rows of S ∈ Rc×T , are supposed to be stationary, independent, and non-Gaussian. ICA can use various different principles [9], [17], [49], [54] to estimate both unknown A and unknown S simultaneously from X. Once S is obtained, cleaner and more representative features may be extracted from it than from the original X [26]. 2) xDAWN algorithm [38]–[40], which is often used to increase the signal to signal-plus-noise ratio in P300- based BCIs. Like ICA, xDAWN also works on the unepoched long block of EEG data X ∈ RC×T . It assumes that X = PD T +N, where P ∈ RC×S represents the P300 signal in an EEG epoch, and D ∈ RT ×S is a Toeplitz matrix whose ﬁrst column is deﬁned as: Dτk,1 =    1, τk is the onset of the kth target stimulus 0, otherwise (1) and N ∈ RC×T represents the ongoing background brain activity as well as the artifacts and noises. xDAWN then designs a spatial ﬁltering matrix W∗ ∈ RC×F , where F is the number of spatial ﬁlters, to maximize the signal to signal-plus-noise ratio, i.e., W∗ = arg max W Tr(WT PDT DP T W) 3 ﬁlters from classiﬁcation to regression by making use of fuzzy sets [63], as we have done in [62]. First, a brief introduction of fuzzy sets is given below. A. Fuzzy Sets A fuzzy set A is comprised of a universe of discourse DA of real numbers together with a membership function µA : DA → [0, 1], i.e., A = ∫ DA µA(x)/x (6) Here ∫ denotes the collection of all points x ∈ DA with associated membership degree µA(x). An example of a fuzzy set is shown in Fig. 1. The membership degrees are µA(1) = 0, µA(3) = 0.5, µA(5) = 1, µA(6) = 0.8, and µA(10) = 0. Observe that this is different from traditional (binary) sets, where each element can only belong to a set completely (i.e., with membership degree 1), or does not belong to it at all (i.e., with membership degree 0); there is nothing in between (i.e., with membership degree 0.5). Fuzzy sets are frequently used in modeling concepts in natural language [22], [36], [55], which may not have clear boundaries. Fig. 1. An examples of a fuzzy set. B. CSPR-OVR Let Xn ∈ RC×S (n = 1, ..., N ) be the nth EEG trial, where C is the number of channels and S is the number of time samples in each trial. We assume that the mean of each channel measurement has been removed, which is usually performed by band-pass ﬁltering. Let yn ∈ {1, ..., K} be the RS of Xn. With the help of fuzzy sets, we can deﬁne “fuzzy” classes to connect regression problems and classiﬁcation problems. Assume K fuzzy classes are used. First, we partition the interval [0, 100] into K + 1 equal intervals, and denote the partition points as {pk}k=1,...,K. It is easy to obtain that pk = 100 · k 4 The only difference between (9) and (4) is that the numerator of (9) also includes the contribution from Class k itself. If we view Class k as the signal of interest, and all other classes as noises, then (9) maximizes the signal to signal-plus-noise ratio, as (2) in the xDAWN algorithm. Equation (9) is also a generalized Rayleigh quotient [14], and the solution W∗ k is the concatenation of the F eigenvec- tors associated with the F largest eigenvalues of the matrix ( ∑K i=1 ¯Σi) −1 ¯Σk. The OVA CSP for classiﬁcation still uses (5) to construct the ﬁnal spatial ﬁlter, and (3) to perform the ﬁltering. Using the technique introduced in the previous subsection, we can easily develop the CSPR-OVA spatial ﬁlter for BCI regression problems. Its procedure is almost identical to that in Algorithm 1. The only difference is that W∗ k is computed by (9) instead of (4). IV. EXPERIMENTS AND DATA This section introduces a PVT experiment that was used to evaluate the performances of the proposed spatial ﬁltering algorithms, the corresponding RS and EEG data preprocessing procedures, and the feature sets. A. Experiment Setup 17 university students (13 males; average age 22.4, standard deviation 1.6) from National Chiao Tung University (NCTU) in Taiwan volunteered to support the data-collection efforts over a 5-month period to study EEG correlates of attention and performance changes under speciﬁc conditions of real- world fatigue [21], as determined by the effectiveness score of Readiband [42]. The voluntary, fully informed consent of the persons used in this research was obtained as required by federal and Army regulations [50], [51]. The Institutional Review Board of NCTU approved the experimental protocol. All participants registered their fatigue levels through a smartphone daily, and received notiﬁcations to report for experimental trials when the effectiveness score deemed their conditions ﬁtted the experimental requirement (low fatigue: > 90; normal: [70, 90]; high fatigue: < 70). Upon completion of the related questionnaires [Karolinska Sleepiness Scale (KSS) [1], and electronically-adapted visual analog scale for fatigue (VAS-F) and stress (VAS-S)] and the informed consent form, subjects performed a PVT, a dynamic attention-shifting task, a lane-keeping task, and selected surveys (KSS, VAS- F, VAS-S, state-trait anxiety inventory, and mind-wandering) preceding each condition. EEG data were recorded at 1000 Hz using a 64-channel NeuroScan system. Most participants performed the laboratory experiment thrice in each of the three fatigue states. In this paper we focus on the PVT [10], which is a sustained-attention task that uses RS to measure the speed with which a subject responds to a visual stimulus. It is widely used, particularly by NASA, for its ease of scoring, simple metrics, convergent validity, and free of learning effects. In our experiment, the PVT was presented on a smartphone with each trial initiated as an empty solid white circle centered on the touchscreen that began to ﬁll in red displayed as a clockwise sweeping motion like the hand of a clock. The sweeping motion was programmed to turn solid red in one second or terminate upon a response by the participants, which required them to tap the touchscreen with the thumb of their dominant hand. The RS was computed as the inverse of the elapsed time between the appearance of the empty solid white circle and the participant's response. Following completi on of each trial, the circle went back to solid white until the next trial. Inter-trial intervals consisted of random intervals between 2-10 seconds. 143 sessions of PVT data were collected from the 17 subjects, and each session lasted 10 minutes. Our goal is to predict the RS using a 3-second EEG trial immediately before it. B. Performance Evaluation Process The following procedure was performed to evaluate the performances of different spatial ﬁlters: 1) EEG data preprocessing to suppress artifacts and noises. 2) RS data preprocessing to suppress outliers. 3) 5-fold cross-validation to compute the regression per- formance for each combination of spatial ﬁlters and regression method: ﬁrst randomly partition the trials into ﬁve equal folds; then, use four folds for super- vised spatial ﬁltering and regression model training, and the remaining fold for testing; repeat this ﬁve times so that every fold is used in testing; ﬁnally compute the regression performances in terms of root mean square error (RMSE) and correlation coefﬁcient (CC). Two regression methods were used: LASSO, whose adjustable parameter λ was optimized by an inner 5-fold cross-validation on the training dataset, and k-nearest neighbors (kNN) regression, where k = 5. 4) Repeat Step 3 10 times and compute the average regres- sion performance. More details about the ﬁrst two steps are given in the next two subsections. C. EEG Data Preprocessing We ﬁrst downsampled the EEG data to 256 Hz, then epoched them to 3-second trials according to the onset of the PVTs. Let the onset time of the nth PVT be tn. Then, the 62- channel EEG trial in [tn − 3, tn] seconds was used to predict the RS, i.e., Xn ∈ R62×768. Each trial was then individually ﬁltered by a [1, 20] Hz ﬁnite impulse response band-pass ﬁlter to make each channel zero-mean and to remove un-useful high frequency components. Because the inter-trial intervals consisted of random inter- vals between 2-10 seconds, it's possible that a 3-second EEG trial covers part of data from the previous trial. Additionally, a trial may also contain the EEG oscillations related to motor reaction (tapping the touchscreen) in the previous trial. To remedy these problems, we removed overlapping trials: let the RS of the nth trial be yn (the corresponding response time is 1/yn); then, the nth trial is removed if tn−tn−1 < 1/yn−1+3, i.e., when the 3-second EEG data for Trial n overlap with the data and response for the previous trial. 5 D. RS Data Preprocessing The raw response times for two subjects are shown in Fig. 3. The top panel is from a typical subject, whose response times were mostly shorter than 1 second. The lower panel is from a subject with possible data recording issues, because lots of response times were longer than 5 seconds, which are highly unlikely in practice. So we excluded that subject from consideration in this paper, and only used the remaining 16 subjects. 100 200 300 400 500 600 700 800 Trial 0 1 2 3RT (s) A typical subject 50 100 150 200 250 300 350 400 450 500 550 Trial 0 10 20 30RT (s) A subject that was removed Fig. 3. Response times for a typical subject (top panel) and a subject with possible data recording issues (bottom panel). The green line is the threshold, and the red stars are response times above the threshold, which will be brought to the threshold. As shown in Fig. 3, the response times were very noisy, and there were obvious outliers. It is very important to suppress the outliers and noises so that the performances of different algorithms can be more accurately compared. In addition to the step in the previous subsection to remove overlapping trials, we also employed the following 2-step procedure for response time preprocessing: 1) Outlier thresholding, which aimed to suppress abnor- mally large response times. First, a threshold θ = my + 3σy was computed for each subject, where my is the mean response time from all sessions of that subject, and σy is the corresponding standard deviation. Then, all response times larger than θ were replaced by θ. Note that the threshold was different for different subjects. 2) Moving average smoothing, which replaced each re- sponse time by the average response time during a 60 seconds moving window centered at the onset of the corresponding PVT to suppress noises. We then computed the RS as the inverse of the RT. The RSs for the 16 subjects are shown in Fig. 4. Observe that they are roughly in the same range, and many of them are approximately Gaussian. E. Feature Extraction We extracted the following four feature sets for each pre- processed EEG trial: • Raw: Theta and Alpha powerband features from the band- pass ﬁltered EEG trials. We computed the average power spectral density (PSD) in the Theta band (4-8 Hz) and Alpha band (8-13 Hz) for each channel using Welch's 0 1 2 3 0 20 40 Subject 1 0 1 2 3 0 20 40 Subject 2 0 1 2 3 0 20 40 Subject 3 0 1 2 3 0 20 40 Subject 4 0 1 2 3 0 20 40 Subject 5 0 1 2 3 0 20 40 Subject 6 0 1 2 3 0 20 40 Subject 7 0 1 2 3 0 20 40 Subject 8 0 1 2 3 0 20 40 Subject 9 0 1 2 3 0 20 40 Subject 10 0 1 2 3 0 20 40 Subject 11 0 1 2 3 0 20 40 Subject 12 0 1 2 3 0 20 40 Subject 13 0 1 2 3 0 20 40 Subject 14 0 1 2 3 0 20 40 Subject 15 0 1 2 3 0 20 40 Subject 16 Fig. 4. Distributions of the preprocessed RSs for the 16 subjects. method [57], and converted these 62 × 2 = 124 band powers to dBs as our features. • CAR: Theta and Alpha powerband features from EEG trials ﬁltered by CAR. This procedure was almost iden- tical to Raw, except that the band-pass ﬁltered EEG trials were also spatially ﬁltered by CAR before the 62 × 2 = 124 powerband features were computed. CAR is one of the most commonly used spatial ﬁlters for EEG, and [31] showed that it helped improve EEG classiﬁcation performance. It simply removes the mean of all channels from each channel. • OVR: Theta and Alpha powerband features from EEG trials ﬁltered by CSPR-OVR. This procedure was almost identical to CAR, except that the CAR ﬁlter was replaced by CSPR-OVR. We used 3 fuzzy classes for the RSs, and 21 spatial ﬁlters 1 for each fuzzy class, so that the spatially ﬁltered signals had dimensionality 63 × 1280, roughly the same as the dimensionality of the original signals. We then extracted 63 × 2 = 126 band power features for each trial. • OVA: Theta and Alpha powerband features from EEG trials ﬁltered by CSPR-OVA. This procedure was also almost identical to CAR, except that the spatial ﬁltering was performed by CSPR-OVA instead of CAR. There were also 63 × 2 = 126 band power features for each trial. V. EXPERIMENTAL RESULTS This section compares the informativeness of the features in Raw, CAR, OVR and OVA, presents the regression perfor- mances, and also performs parameter sensitivity analysis for Algorithm 1. 1We used 21 spatial ﬁlters here so that the ﬁltered signals had roughly the same dimensionality as the original signals, which ensured fair performance comparison. In Section V-C we also performed sensitivity analysis on the number of spatial ﬁlters. 6 A. Informativeness of the Features Before studying the regression performances, it is important to check if the extracted features in Raw, CAR, OVR and OVA are indeed meaningful. We picked a typical subject, partitioned his data random into 50% training and 50% testing, and extracted Raw and CAR. We then designed the spatial ﬁlters using CSPR-OVR and CSPR-OVA on the training data, and extracted the corresponding OVR and OVA. For each feature set, we identiﬁed the top three channels that had the maximum correlation with the RS using the training data, and also computed the corresponding correlation coefﬁcients for the testing data. The results are shown in Fig. 5, where in each subﬁgure the data on the left of the black dotted line were used for training, and the right for testing. The top thick curve is the RS, and the bottom three curves are the maximally correlated features (note that good features are negatively correlated with the RS) identiﬁed from the training data. The training and testing correlation coefﬁcients are shown on the left and right of the corresponding channel, respectively. Observe that the features from CAR had slightly better correlations with the RS in training than those from Raw, but not necessarily in testing. However, the features from OVR and OVA had much higher training and testing correlations to the RS than those from Raw and CAR, suggesting that CSPR-OVR and CSPR-OVA can indeed increase the signal quality. The reason is: if we view Class k as the signal of interest, and all other classes as noises, then CSPR-OVR in (4) enhances the signal to noise ratio of the EEG signal, and CSPR-OVA in (9) enhances the signal to signal-plus-noise ratio. Raw RS -0.21 -0.2 -0.19 -0.22 CAR RS -0.26 -0.21 OVR RS -0.6 -0.56 -0.58 OVA RS -0.6 -0.56 -0.58 Fig. 5. Powerband features from different feature extraction methods, and the corresponding training and testing CCs with the RS. B. Regression Performance Comparison The RMSEs and CCs of LASSO and kNN using the four feature sets are shown in Fig. 6 for the 16 subjects. Recall that for each subject the feature extraction methods were run 10 times, each with randomly partitioned training and testing data, and the average regression performances are shown here. The average RMSEs and CCs across all subjects are also shown in the last group of each panel. Observe that CAR had comparable or slightly better performance than Raw. Regardless of which regression algorithm was used, generally OVR and OVA had similar performance, and both of them achieved much smaller RMSEs and much larger CCs than Raw and CAR, suggesting that our extension of CSP from supervised classiﬁcation to supervised regression can indeed improve the regression per- formance. Finally, LASSO had better performance than kNN on Raw and CAR, but kNN became better on OVR and OVA. The corresponding percentage performance improvements of LASSO and kNN using the four feature sets are shown in Fig. 7, where the legend “LASSO,OVR/Raw” means the percentage performance improvement of LASSO on OVR over LASSO on Raw, and other legends should be interpreted in a similar manner. For both LASSO and kNN, OVR and OVA achieved similar performance improvements over Raw, and also over CAR. For LASSO, on average OVR had 10.02% smaller RMSE than Raw, and 19.39% larger CC. For kNN, on average OVR had 19.77% smaller RMSE than Raw, and 86.47% larger CC. We also performed a two-way Analysis of Variance (ANOVA) for different regression algorithms to check if the RMSE and CC differences among the four feature sets were statistically signiﬁcant, by setting the subjects as a random effect. The results are shown in Table I, which indicated that there were statistically signiﬁcant differences in both RMSEs and CCs among different feature sets for both LASSO and kNN. TABLE I p-VALUES OF TWO-WAY ANOVA TESTS FOR {RA W, CAR, OVR, OVA}. 7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE LASSO, Raw LASSO, CAR LASSO, OVR LASSO, OVA kNN, Raw kNN, CAR kNN, OVR kNN, OVA 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6 0.8CC LASSO, Raw LASSO, CAR LASSO, OVR LASSO, OVA kNN, Raw kNN, CAR kNN, OVR kNN, OVA Fig. 6. RMSEs and CCs of the eight approaches on the 16 subjects. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 10 20 30 40 50% RMSE Improvement LASSO, OVR/Raw LASSO, OVA/Raw LASSO, OVR/CAR LASSO, OVA/CAR kNN, OVR/Raw kNN, OVA/Raw kNN, OVR/CAR kNN, OVA/CAR 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 50 100 150% CC ImprovementLASSO, OVR/Raw LASSO, OVA/Raw LASSO, OVR/CAR LASSO, OVA/CAR kNN, OVR/Raw kNN, OVA/Raw kNN, OVR/CAR kNN, OVA/CAR Fig. 7. Pairwise percentage performance improvement of the algorithms on the 16 subjects. C. Parameter Sensitivity Analysis There are two adjustable parameters in CSPR-OVR: K, the number of fuzzy classes for the RSs, and F , the number of spatial ﬁlters for each fuzzy class. In this subsection we study the sensitivity of the regression performance to these two parameters. The regression performances for K = {2, 3, 4, 5, 6, 7} (F was ﬁxed to be 21) are shown in Fig. 8. Algorithm 1 was repeated ﬁve times, each with a random partition of training and testing data, and the average regression results are shown. For both LASSO and kNN, on average K = 2 gave worst performance, but K = {3, 4, 5, 6, 7} resulted in roughly the same RMSE and CC. Hence, K = 3 seems to be a good compromise between performance and computational cost. The regression performances for F = {5, 10, 20, 30, 40, 50, 60} (K was ﬁxed to be 3) are shown in Fig. 9. Algorithm 1 was again repeated ﬁve times, and the average regression results are shown. For both LASSO and kNN, generally a larger F resulted in a smaller RMSE and a larger CC, but the performance may reach a plateau at a certain F . Also, a larger F means heavier computational cost, which should be taken into consideration in choosing F . For the PVT experiment, F ∈ [20, 30] seemed to achieve a good compromise between performance and computational cost. D. Different Fuzzy Set Shapes In Section III we used triangular fuzzy sets for simplicity, but other shapes can also be used. Fig. 10 illustrates how Gaussian fuzzy sets can be designed here: the center of the kth Gaussian fuzzy class is at Pk [computed from (7)], and 8 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE RMSE of LASSO w.r.t. K, the number of fuzzy classes K=2 K=3 K=4 K=5 K=6 K=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE RMSE of kNN w.r.t. K, the number of fuzzy classes K=2 K=3 K=4 K=5 K=6 K=7 (a) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC CC of LASSO w.r.t. K, the number of fuzzy classes K=2 K=3 K=4 K=5 K=6 K=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC CC of kNN w.r.t. K, the number of fuzzy classes K=2 K=3 K=4 K=5 K=6 K=7 (b) Fig. 8. (a) RMSEs and (b) CCs of LASSO and kNN with respect to K, the number of fuzzy classes in Algorithm 1. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE RMSE of LASSO w.r.t. F, the number of spatial filters for each fuzzy class F=5 F=10 F=20 F=30 F=40 F=50 F=60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE RMSE of kNN w.r.t. F, the number of spatial filters for each fuzzy class F=5 F=10 F=20 F=30 F=40 F=50 F=60 (a) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC CC of LASSO w.r.t. F, the number of spatial filters for each fuzzy class F=5 F=10 F=20 F=30 F=40 F=50 F=60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC CC of kNN w.r.t. F, the number of spatial filters for each fuzzy class F=5 F=10 F=20 F=30 F=40 F=50 F=60 (b) Fig. 9. (a) RMSEs and (b) CCs of LASSO and kNN with respect to F , the number of spatial ﬁlters for each fuzzy class in Algorithm 1. the spread is specially designed so that two adjacent fuzzy sets intersect at the midpoint with membership grade 0.5. As a result, generally the Gaussian fuzzy classes are not symmetric. When the Gaussian fuzzy classes in Fig. 10 are used in CSPR-OVR and CSPR-OVA, the results are shown in Fig. 11, which are almost identical to those obtained from triangular fuzzy sets (Fig. 6). Fuzzy Class 1 P1 Fuzzy Class 2 P2 Fuzzy Class 3 P3 yn µ(yn) 1 0.5 0 Fig. 10. The three fuzzy classes for yn, when Gaussian fuzzy sets are used. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE LASSO, Raw LASSO, CAR LASSO, OVR LASSO, OVA kNN, Raw kNN, CAR kNN, OVR kNN, OVA 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6 0.8CC LASSO, Raw LASSO, CAR LASSO, OVR LASSO, OVA kNN, Raw kNN, CAR kNN, OVR kNN, OVA Fig. 11. RMSEs and CCs of the eight approaches on the 16 subjects, when the three Gaussian fuzzy sets in Fig. 10 are used in CSPR-OVR and CSPR- OVA. E. Robustness to Noise It is also important to study the robustness of different spatial ﬁlters to noises. According to [64], there are two types of noises: class noise, which is the noise on the model outputs, and attribute noise, which is the noise on the model inputs. In this subsection we focus on the attribute noise. As in [64], for each model input, we randomly replaced q% (q = 0, 10, ..., 40) of all trials from a subject with a uniform noise between its minimum and maximum values. After this was done for both the training and testing data, we extracted feature sets Raw, CAR, OVR and OVA, and trained LASSO and kNN, on the corrupted training data. We then tested their performances on the corrupted testing data. The results are shown in Fig. 12. Generally, as the noise level increased, the performances decreased, which is intuitive. However, OVR and OVA achieved better RMSEs and CCs than Raw and CAR at almost all noise levels, suggesting that it is still beneﬁcial to use CSPR-OVR and CSPR-OVA even under high attribute noise. F. Computational cost Observe from Algorithm 1 that in training CSPR- OVR needs to perform a matrix inversion and an eigen- decomposition to compute W∗; however, once the training 9 0 10 20 30 40 0.26 0.28 0.3 0.32 0.34 0.36 0.38RMSE 0 10 20 30 40 0.3 0.4 0.5 0.6 0.7CC LASSO, Raw LASSO, CAR LASSO, OVR LASSO, OVA kNN, Raw kNN, CAR kNN, OVR kNN, OVA Fig. 12. Average RMSEs and CCs of the eight approaches wrt different attribute noise levels. is done, the ﬁltering of new EEG trials can be conducted very efﬁciently by a simple matrix multiplication [see (3)]. Let N be the number of training samples. Then, the actual training time of CSPR-OVR and CSPR-OVA increased linearly with N , as shown in Fig. 13. The platform was a Dell XPS15 laptop (Intel i7-6700HQ CPU @2.60GHz, 16 GB memory) running Windows 10 Pro 64-bit and Matlab 2016b. A least squares curve ﬁt shows that the training time is 0.2216 + 0.0003N seconds, which should not be a problem for a practical N . 100 200 300 400 500 600 700 N, the number of training samples 0.25 0.3 0.35 0.4 0.45Training time (s) OVR OVA Fig. 13. The training time of CSPR-OVR and CSPR-OVA wrt N . VI. DISCUSSIONS AND FUTURE RESEARCH Recall that 5-fold cross-validation was used in the perfor- mance evaluation in the previous section, i.e., we concate- nated the nine-session data from the same subject, randomly partitioned them into ﬁve equal-length folds, and then used four folds for training and the remaining one for testing. So, the training and testing folds contained data from the same sessions. This is equivalent to the case that we label some session-speciﬁc data in ofﬂine regression. Our results showed that in this case CSPR-OVR and CSPR-OVA can signiﬁcantly improve the regression performance. To avoid the use of session-speciﬁc data, we also inves- tigated a different validation method: leave-one-session-out validation, in which for each subject we trained the spatial ﬁlters using eight sessions and tested them on the remaining session. Interestingly, all four feature sets and both regression models achieved very poor performance here. The reasons are: 1) we need a proper way to normalize the RSs from different sessions, as done for the response times in [16]; and, 2) there is large intra-subject variation, meaning that the EEG responses for the same subject vary at different times (recall that these nine sessions were collected at different days); so, the pat- terns learned from previous sessions become obsolete for the new session, and hence spatial ﬁltering alone does not help. However, our previous research [58], [61], [62] has shown that transfer learning can cope well with the inter-subject variation (individual differences) in both classiﬁcation and regression problems, and we conjecture that it can also handle the intra- subject variation. One of our future research directions is to demonstrate the performance of CSPR-OVR and CSPR-OVA in a transfer learning framework to individualize a generalized model for regression problems, as done in [18], [46] for EEG- based cognitive performance classiﬁcation. Another direction of our future research will apply CSPR- OVR and CSPR-OVA to other important EEG-based regres- sion problems, e.g., drowsiness (or alertness) estimation during driving, and integrate it with more sophisticated feature ex- traction approaches, e.g., Riemannian geometry [8], for better regression performance. VII. CONCLUSIONS EEG signals are easily contaminated by artifacts and noises, so preprocessing is needed before they are fed into a machine learning algorithm in BCI. Spatial ﬁlters, e.g., ICA, xDAWN, CSP and CCA, have been widely used to increase the EEG signal quality for classiﬁcation problems, but their applications in BCI regression problems have been very limited. In this paper, we have proposed two CSP ﬁlters for EEG-based re- gression problems in BCI, which were extended from the CSP ﬁlter for classiﬁcation, by making use of fuzzy sets. Extensive experimental results on EEG-based RS estimation from a large-scale study, which collected 143 sessions of PVT data from 17 subjects during a 5-month period, demonstrated that our proposed spatial ﬁlters can signiﬁcantly increase the EEG signal quality. When used in LASSO and kNN, the spatial ﬁlters can reduce the estimation RMSE by 10.02 − 19.77%, and at the same time increase the CC by 19.39 − 86.47%. ACKNOWLEDGEMENT Research was sponsored by the U.S. Army Research Labo- ratory and was accomplished under Cooperative Agreement Numbers W911NF-10-2-0022 and W911NF-10-D-0002/TO 0023. The views and the conclusions contained in this docu- ment are those of the authors and should not be interpreted as representing the ofﬁcial policies, either expressed or implied, of the U.S. Army Research Laboratory or the U.S. Govern- ment. This work was also partially supported by the Australian Research Council (ARC) under discovery grant DP150101645. REFERENCES [1] T. Akerstedt and M. Gillberg, “Subjective and objective sleepiness in the active individual,” International Journal of Neuroscience, vol. 52, no. 1-2, pp. 29–37, 1990. [2] A. Barachant. (2014) MEG decoding using Riemannian geometry and unsupervised classiﬁcation. Accessed: 8/17/2016. [Online]. Available: http://alexandre.barachant.org/wp-content/uploads/2014/08/documentation.pdf. [3] Y. Benjamini and Y. Hochberg, “Controlling the false discovery rate: A practical and powerful approach to multiple testing,” Journal of the Royal Statistical Society, Series B (Methodological), vol. 57, pp. 289– 300, 1995. [4] N. Bigdely-Shamlo, T. Mullen, C. Kothe, K.-M. Su, and K. A. Robbins, “The PREP pipeline: standardized preprocessing for large-scale EEG analysis,” Frontiers in Neuroinformatics, vol. 9, 2015. 10 [5] G. Bin, X. Gao, Y. Wang, Y. Li, B. Hong, and S. Gao, “A high-speed BCI based on code modulation VEP,” Journal of neural engineering, vol. 8, no. 2, 2011. [6] G. Bin, X. Gao, Z. Yan, B. Hong, and S. Gao, “An online multi-channel SSVEP-based brain-computer interface using a canonical correlation analysis method,” Journal of neural engineering, vol. 6, no. 4, 2009. [7] B. Blankertz, R. Tomioka, S. Lemm, M. Kawanabe, and K. R. Muller, “Optimizing spatial ﬁlters for robust EEG single-trial analysis,” IEEE Signal Processing Magazine, vol. 25, no. 1, pp. 41–56, 2008. [8] M. Congedo, A. Barachant, and A. Andreev, “A new generation of brain- computer interface based on Riemannian geometry,” arXiv: 1310.8115, 2013. [9] A. Delorme and S. Makeig, “EEGLAB: an open source toolbox for analysis of single-trial EEG dynamics including independent component analysis,” Journal of Neuroscience Methods, vol. 134, pp. 9–21, 2004. [10] D. F. Dinges and J. W. Powell, “Microcomputer analyses of performance on a portable, simple visual RT task during sustained operations,” Behavior research methods, instruments, & computers, vol. 17, no. 6, pp. 652–655, 1985. [11] G. Dornhege, G. C. B. Blankertz, and K.-R. Muller, “Boosting bit rates in non-invasive EEG single-trial classiﬁcations by feature combination and multi-class paradigms,” IEEE Trans. on Biomedical Engineering, vol. 51, no. 6, pp. 993–1002, 2004. [12] O. Dunn, “Multiple comparisons among means,” Journal of the Ameri- can Statistical Association, vol. 56, pp. 62–64, 1961. [13] ——, “Multiple comparisons using rank sums,” Technometrics, vol. 6, pp. 214–252, 1964. [14] G. H. Golub and C. F. V. Loan, Matrix Computation, 3rd ed. Baltimore, MD: The Johns Hopkins University Press, 1996. [15] H. Hotelling, “Relations between two sets of variates,” Biometrika, vol. 28, no. 3/4, pp. 321–377, 1936. [16] Z. Hu, Y. Sun, J. Lim, N. Thakor, and A. Bezerianos, “Investigating the correlation between the neural activity and task performance in a psychomotor vigilance test,” in Proc. 37th Annual Int'l Conf. of the IEEE Engineering in Medicine and Biology Society (EMBC), Milan, Italy, August 2015, pp. 4725–4728. [17] A. Hyvarinen and E. Oja, “Independent component analysis: algorithms and applications,” Neural networks, vol. 13, no. 4, pp. 411–430, 2000. [18] R. R. Johnson, D. P. Popovic, R. E. O. andMaja Stikic, D. J. Lev- endowski, and C. Berka, “Drowsiness/alertness algorithm development and validation using synchronized EEG and cognitive performance to individualize a generalized model,” Biological Psychology, vol. 87, p. 241250, 2011. [19] I. Jolliffe, Principal component analysis. Wiley Online Library, 2002. [20] T.-P. Jung, S. Makeig, C. Humphries, T.-W. Lee, M. J. Mckeown, V. Iragui, and T. J. Sejnowski, “Removing electroencephalographic artifacts by blind source separation,” Psychophysiology, vol. 37, no. 2, pp. 163–178, 2000. [21] S. Kerick, C.-H. Chuang, J.-T. King, T.-P. Jung, J. Brooks, B. T. Files, K. McDowell, and C.-T. Lin, “Inter- and intra-individual variations in sleep, subjective fatigue, and vigilance task performance of students in their real-world environments over extended periods,” 2016, submitted. [22] G. J. Klir and B. Yuan, Fuzzy Sets and Fuzzy Logic: Theory and Applications. Upper Saddle River, NJ: Prentice-Hall, 1995. [23] T. D. Lagerlund, F. W. Sharbrough, and N. E. Busacker, “Spatial ﬁltering of multichannel electroencephalographic recordings through principal component analysis by singular value decomposition,” Journal of Clinical Neurophysiology, vol. 14, no. 1, pp. 73–82, 1997. [24] B. J. Lance, S. E. Kerick, A. J. Ries, K. S. Oie, and K. McDowell, “Brain-computer interface technologies in the coming decades,” Proc. of the IEEE, vol. 100, no. 3, pp. 1585–1599, 2012. [25] L.-D. Liao, C.-T. Lin, K. McDowell, A. Wickenden, K. Gramann, T.-P. Jung, L.-W. Ko, and J.-Y. Chang, “Biosensor technologies for augmented brain-computer interfaces in the next decades,” Proc. of the IEEE, vol. 100, no. 2, pp. 1553–1566, 2012. [26] C. T. Lin, R. C. Wu, S. F. Liang, T. Y. Huang, W. H. Chao, Y. J. Chen, and T. P. Jung, “EEG-based drowsiness estimation for safety driving using independent component analysis,” IEEE Trans. on Circuits and Systems, vol. 52, pp. 2726–2738, 2005. [27] C.-T. Lin, Y.-C. Chen, T.-Y. Huang, T.-T. Chiu, L.-W. Ko, S.-F. Liang, H.-Y. Hsieh, S.-H. Hsu, and J.-R. Duann, “Development of wireless brain computer interface with embedded multitask scheduling and its application on real-time driver's drowsiness detection an d warning,” IEEE Trans. on Biomedical Engineering, vol. 55, no. 5, pp. 1582–1591, 2008. [28] C.-T. Lin, L.-W. Ko, I.-F. Chung, T.-Y. Huang, Y.-C. Chen, T.-P. Jung, and S.-F. Liang, “Adaptive EEG-based alertness estimation system by using ICA-based fuzzy neural networks,” IEEE Trans. on Circuits and Systems-I, vol. 53, no. 11, pp. 2469–2476, 2006. [29] S. Makeig, C. Kothe, T. Mullen, N. Bigdely-Shamlo, Z. Zhang, and K. Kreutz-Delgado, “Evolving signal processing for brain-computer interfaces,” Proc. of the IEEE, vol. 100, no. Special Centennial Issue, pp. 1567–1584, 2012. [30] E. M. Maynard, C. T. Nordhausen, and R. A. Normann, “The Utah intracortical electrode array: a recording structure for potential brain- computer interfaces,” Electroencephalography and clinical neurophysi- ology, vol. 102, no. 3, pp. 228–239, 1997. [31] D. J. McFarland, L. M. McCane, S. V. David, and J. R. Wolpaw, “Spatial ﬁlter selection for EEG-based communication,” Electroencephalography and clinical Neurophysiology, vol. 103, pp. 386–394, 1997. [32] J. Mellinger, G. Schalk, C. Braun, H. Preissl, W. Rosenstiel, N. Bir- baumer, and A. Kubler, “An MEG-based brain-computer interface (BCI),” Neuroimage, vol. 36, no. 3, pp. 581–593, 2007. [33] N. Naseer and K.-S. Hong, “fNIRS-based brain-computer interfaces: a review,” Frontiers in human neuroscience, vol. 9, p. 3, 2015. [34] L. F. Nicolas-Alonso and J. Gomez-Gil, “Brain computer interfaces, a review,” Sensors, vol. 12, no. 2, pp. 1211–1279, 2012. [35] X. Pei, D. L. Barbour, E. C. Leuthardt, and G. Schalk, “Decoding vowels and consonants in spoken and imagined words using electrocortico- graphic signals in humans,” Journal of neural engineering, vol. 8, no. 4, 2011. [36] C. C. Ragin, Fuzzy-set social science. Chicago, IL: The University of Chicago Press, 2000. [37] H. Ramoser, J. Muller-Gerking, and G. Pfurtscheller, “Optimal spatial ﬁltering of single trial EEG during imagined hand movement,” IEEE Trans. on Rehabilitation Engineering, vol. 8, no. 4, pp. 441–446, 2000. [38] B. Rivet, A. Souloumiac, V. Attina, and G. Gibert, “xDAWN algorithm to enhance evoked potentials: application to brain-computer interface,” IEEE Trans. on Biomedical Engineering, vol. 56, no. 8, pp. 2035–2043, 2009. [39] B. Rivet, H. Cecotti, A. Souloumiac, E. Maby, and J. Mattout, “Theo- retical analysis of xDAWN algorithm: application to an efﬁcient sensor selection in a P300 BCI,” in Proc. 19th European Signal Processing Conference, Barcelona, Spain, August 2011, pp. 1382–1386. [40] B. Rivet and A. Souloumiac, “Optimal linear spatial ﬁlters for event- related potentials based on a spatio-temporal model: Asymptotical performance analysis,” Signal Processing, vol. 93, no. 2, pp. 387–398, 2013. [41] R. N. Roy, S. Bonnet, S. Charbonnier, P. Jallon, and A. Campagne, “A comparison of ERP spatial ﬁltering methods for optimal mental workload estimation,” in Proc. 37th Annual Int'l Conf. of the IEEE Engineering in Medicine and Biology Society (EMBC), 2015, pp. 7254– 7257. [42] C. Russell, J. Caldwell, D. Arand, L. Myers, P. Wubbels, and H. Downs. (2015) Validation of the fatigue science readiband actigraph and associated sleep/wake classiﬁcation algorithms. Accessed: 08/11/2016. [Online]. Available: http://static1.squarespace.com/static/550af02ae4b0cf85628d981a/t/5526c99ee4b019412c32 11 [50] US Department of Defense Ofﬁce of the Secretary of Defense, “Code of federal regulations protection of human subjects,” Government Printing Ofﬁce, no. 32 CFR 19, 1999. [51] US Department of the Army, “Use of volunteers as subjects of research,” Government Printing Ofﬁce, no. AR 70-25, 1990. [52] (2011) Trafﬁc safety facts crash stats: drowsy driving. US Department of Transportation, National Highway Trafﬁc Safety Administration. Washington, DC. [Online]. Available: http://www-nrd.nhtsa.dot.gov/pubs/811449.pdf [53] J. van Erp, F. Lotte, and M. Tangermann, “Brain-computer interfaces: Beyond medical applications,” Computer, vol. 45, no. 4, pp. 26–34, 2012. [54] R. Vigario, J. Sarela, V. Jousmiki, M. Hamalainen, and E. Oja, “Indepen- dent component approach to the analysis of EEG and MEG recordings,” IEEE Trans. on Biomedical Engineering, vol. 47, no. 5, pp. 589–593, 2000. [55] L.-X. Wang, A Course in Fuzzy Systems and Control. Upper Saddle River, NJ: Prentice Hall, 1997. [56] C.-S. Wei, Y.-P. Lin, Y.-T. Wang, T.-P. Jung, N. Bigdely-Shamlo, and C.- T. Lin, “Selective transfer learning for EEG-based drowsiness detection,” in Proc. IEEE Int'l Conf. on Systems, Man and Cybernetics , Hong Kong, October 2015. [57] P. Welch, “The use of fast Fourier transform for the estimation of power spectra: A method based on time averaging over short, modiﬁed periodograms,” IEEE Trans. on Audio Electroacoustics, vol. 15, pp. 70– 73, 1967. [58] D. Wu, “Online and ofﬂine domain adaptation for reducing BCI calibra- tion effort,” IEEE Trans. on Human-Machine Systems, 2016, in press. [59] D. Wu, C.-H. Chuang, and C.-T. Lin, “Online driver's dro wsiness estimation using domain adaptation with model fusion,” in Proc. Int'l Conf. on Affective Computing and Intelligent Interaction, Xi'an, China, September 2015, pp. 904–910. [60] D. Wu, V. J. Lawhern, S. Gordon, B. J. Lance, and C.-T. Lin, “Ofﬂine EEG-based driver drowsiness estimation using enhanced batch-mode active learning (EBMAL) for regression,” in Proc. IEEE Int'l Conf. on Systems, Man and Cybernetics, Budapest, Hungary, October 2016. [61] D. Wu, V. J. Lawhern, S. Gordon, B. J. Lance, and C.-T. Lin, “Spectral meta-learner for regression (SMLR) model aggregation: Towards cali- brationless brain-computer interface (BCI),” in Proc. IEEE Int'l Conf. on Systems, Man and Cybernetics, Budapest, Hungary, October 2016. [62] D. Wu, V. J. Lawhern, S. Gordon, B. J. Lance, and C.-T. Lin, “Driver drowsiness estimation from EEG signals using online weighted adap- tation regularization for regression (OwARR),” IEEE Trans. on Fuzzy Systems, 2016, in press. [63] L. A. Zadeh, “Fuzzy sets,” Information and Control, vol. 8, pp. 338–353, 1965. [64] X. Zhu and X. Wu, “Class noise vs. attribute noise: A quantitative study of their impacts,” Artiﬁcial Intelligence Review, vol. 22, pp. 177–210, 2004. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC CC of LASSO w.r.t. K, the number of fuzzy classes K=2 K=3 K=4 K=5 K=6 K=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC CC of LASSO w.r.t. F, the number of spatial filters for each fuzzy class F=5 F=10 F=20 F=30 F=40 F=50 F=60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC LASSO, FS1 LASSO, FS2 LASSO, FS3 kNN, FS1 kNN, FS2 kNN, FS3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.1 0.2 0.3CC Improvement LASSO, FS2/FS1 LASSO, FS3/FS2 LASSO, FS3/FS1 kNN, FS2/FS1 kNN, FS3/FS2 kNN, FS3/FS1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 20 40 60% CC Improvement LASSO, FS2/FS1 LASSO, FS3/FS2 LASSO, FS3/FS1 kNN, FS2/FS1 kNN, FS3/FS2 kNN, FS3/FS1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 10 20 30 40 50% RMSE Improvement LASSO, OVR/Raw LASSO, OVA/Raw LASSO, OVR/CAR LASSO, OVA/CAR kNN, OVR/Raw kNN, OVA/Raw kNN, OVR/CAR kNN, OVA/CAR 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 50 100 150% CC ImprovementLASSO, OVR/Raw LASSO, OVA/Raw LASSO, OVR/CAR LASSO, OVA/CAR kNN, OVR/Raw kNN, OVA/Raw kNN, OVR/CAR kNN, OVA/CAR 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16Avg Subject 0 0.5RMSEK=2 K=3 K=4 K=5 K=6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16Avg Subject 0 0.5CC K=2 K=3 K=4 K=5 K=6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16Avg Subject 0 0.5RMSEF=5 F=10 F=20 F=30 F=40 F=50 F=60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16Avg Subject 0 0.5CC F=5 F=10 F=20 F=30 F=40 F=50 F=60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE1s 3s 5s 7s 9s 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0.4 0.6 0.8CC 1s 3s 5s 7s 9s 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE RMSE of LASSO w.r.t. K, the number of fuzzy classes K=2 K=3 K=4 K=5 K=6 K=7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE RMSE of LASSO w.r.t. F, the number of spatial filters for each fuzzy class F=5 F=10 F=20 F=30 F=40 F=50 F=60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.2 0.4 0.6RMSE LASSO, FS1 LASSO, FS2 LASSO, FS3 kNN, FS1 kNN, FS2 kNN, FS3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 0.05 0.1RMSE Improvement LASSO, FS2/FS1 LASSO, FS3/FS2 LASSO, FS3/FS1 kNN, FS2/FS1 kNN, FS3/FS2 kNN, FS3/FS1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 Avg Subject 0 10 20 30% RMSE Improvement LASSO, FS2/FS1 LASSO, FS3/FS2 LASSO, FS3/FS1 kNN, FS2/FS1 kNN, FS3/FS2 kNN, FS3/FS1","libVersion":"0.3.1","langs":""}